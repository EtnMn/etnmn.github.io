---
import { getCollection } from "astro:content";
import BaseLayout from "@/layouts/base-layout.astro";
import Chip from "@/components/chip.astro";
import { formatDisplayedFullDate } from "@/utils/date";
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";

const title = "Posts";

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { page } = Astro.props as Props;

export const getStaticPaths = (async ({ paginate }) => {
    const posts = await getCollection("posts");
    posts.sort(
        (a, b) => b.data.published.getTime() - a.data.published.getTime()
    );
    return paginate(posts, { pageSize: 10 });
}) satisfies GetStaticPaths;
---

<BaseLayout title={title}>
    <h3 class="font-light mb-5">
        {title}
    </h3>
    <div class="grid gap-y-16 sm:grid-cols-[3fr_1fr] sm:gap-x-8">
        <section>
            <h4 class="leading-loose text-lg font-bold">2024</h4>
            <ul class="flex flex-col gap-y-6 my-6">
                {
                    page.data.map((p) => (
                        <li class="flex flex-col gap-2 sm:flex-row sm:gap-x-4">
                            <div class="min-w-32 text-sm leading-6">
                                <time datetime={p.data.published.toISOString()}>
                                    {formatDisplayedFullDate(p.data.published)}
                                </time>
                            </div>
                            <div>
                                <a
                                    data-astro-prefetch=""
                                    href={`/blog/${p.slug}`}
                                    class="group"
                                >
                                    <span class="underline-offset-4 decoration-dashed decoration-1 group-hover:underline">
                                        {p.data.title}
                                    </span>

                                    <p class="line-clamp-3 block text-sm italic font-light">
                                        {p.data.subTitle}
                                    </p>
                                </a>
                            </div>
                        </li>
                    ))
                }
            </ul>
            {page.url.prev ? <a href={page.url.prev}>Previous</a> : null}
            {page.url.next ? <a href={page.url.next}>Next</a> : null}
        </section>
        <aside>
            <h4 class="leading-loose">Tags</h4>
            <div class="flex flex-wrap gap-3">
                <Chip icon="hashtag">zzz</Chip>
                <Chip icon="github">zzz</Chip>
            </div>
        </aside>
    </div>
</BaseLayout>
