---
import { getCollection } from "astro:content";
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";
import config from "@/config.json";
import GoBackButton from "@/components/go-back-button.astro";
import BlogLayout from "@/layouts/blog-layout.astro";
import PostItem from "@/components/post-item.astro";

if (!config?.blog?.enabled) {
    return Astro.rewrite("/404");
}

const title = "Posts";

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
type ExtractGeneric<T> = T extends Array<infer U> ? U : never;
type PageDataType = ExtractGeneric<Props["page"]["data"]>;

const { page } = Astro.props as Props;

export const getStaticPaths = (async ({ paginate }) => {
    const posts = await getCollection("posts", (p) => !p.data.draft);
    posts.sort(
        (a, b) => b.data.published.getTime() - a.data.published.getTime()
    );
    return paginate(posts, { pageSize: 10 });
}) satisfies GetStaticPaths;
---

<BlogLayout title={title}>
    <section>
        <div class="flex flex-wrap justify-between">
            <h3 class="text-2xl">{title}</h3>
            <GoBackButton to="/" />
        </div>
        <section>
            <ul class="flex flex-col gap-y-6 my-3">
                {
                    page.data.map((p) => (
                        <li class="flex flex-col gap-2 sm:flex-row sm:gap-x-4">
                            <PostItem post={p} />
                        </li>
                    ))
                }
            </ul>
        </section>

        <div class="flex gap-1 justify-center">
            {
                page.url.prev ? (
                    <a
                        href={page.url.prev}
                        class="bordered-shape flex items-center justify-center px-3 h-8 text-sm font-medium text-gray-500 hover:text-gray-900 dark:hover:text-white dark:text-gray-400 hover:border border-gray-500 hover:border-gray-900 dark:hover:border-white dark:border-gray-400"
                    >
                        Previous
                    </a>
                ) : null
            }

            {
                page.url.next ? (
                    <a
                        href={page.url.next}
                        class="bordered-shape flex items-center justify-center px-3 h-8 text-sm font-medium text-gray-500 hover:text-gray-900 dark:hover:text-white dark:text-gray-400 hover:border border-gray-500 hover:border-gray-900 dark:hover:border-white dark:border-gray-400"
                    >
                        Next
                    </a>
                ) : null
            }
        </div>
    </section>
</BlogLayout>
