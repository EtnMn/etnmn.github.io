---
import BaseLayout from "@/layouts/base-layout.astro";
import Prose from "@/components/prose.astro";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { formatDisplayedDate } from "@/utils/date";
import config from "@/config.json";
import Certifications from "@/components/certifications.astro";

const allExperiences = await getCollection("experience");
allExperiences.sort((a, b) => b.data.start.getTime() - a.data.start.getTime());

const allEducations = await getCollection("education");
allEducations.sort((a, b) => b.data.start.getTime() - a.data.start.getTime());

const images = import.meta.glob<{ default: ImageMetadata }>(
    "../assets/*.{jpeg,jpg,png,gif}"
);
---

<BaseLayout>
    {
        (
            <section>
                <div class="flex items-center">
                    {config.personnal.photo && (
                        <Image
                            src={images[config.personnal.photo]()}
                            alt="photo"
                            class="photo p-5 mr-10 max-w-64 justify-self-center border-2 border-dashed hidden sm:block border-gray-500"
                        />
                    )}
                    {config.about.text && (
                        <div>
                            <h3 class="font-light mb-4">
                                {config.about.title}
                            </h3>
                            <p>
                                <Prose>
                                    <Fragment set:html={config.about.text} />
                                </Prose>
                            </p>
                        </div>
                    )}
                </div>
            </section>
        )
    }
    <section class="mt-10">
        <h3
            class="mb-5 pb-1 text-center font-light border-b-2 border-dashed border-gray-500"
        >
            {config.experience.title}
        </h3>
        {
            allExperiences && (
                <div class="flex flex-col gap-y-10 mt-10">
                    {allExperiences.map(async (e) => {
                        const { Content } = await e.render();
                        return (
                            <div class="flex gap-x-10 gap-y-3 flex-col sm:flex-row">
                                <div class="basis-1/4">
                                    <h4 class="leading-loose">
                                        {e.data.title}
                                    </h4>
                                    <div class="font-light">
                                        <p>{e.data.subTitle}</p>
                                        <time
                                            datetime={e.data.start.toISOString()}
                                        >
                                            {formatDisplayedDate(e.data.start)}
                                        </time>
                                        {e.data.end ? (
                                            <time
                                                datetime={e.data.end.toISOString()}
                                            >
                                                -{" "}
                                                {formatDisplayedDate(
                                                    e.data.end
                                                )}
                                            </time>
                                        ) : (
                                            <span>- Present</span>
                                        )}
                                    </div>
                                </div>
                                {e.body && (
                                    <div class="basis-3/4">
                                        <Prose>
                                            <Content />
                                        </Prose>
                                    </div>
                                )}
                            </div>
                        );
                    })}
                </div>
            )
        }
    </section>
    <section class="mt-10">
        <h3
            class="mb-5 pb-1 text-center font-light border-b-2 border-dashed border-gray-500"
        >
            {config.education.title}
        </h3>
        {
            allEducations && (
                <div class="flex flex-col sm:grid grid-cols-2 gap-2 gap-y-6">
                    {allEducations.map(async (e) => {
                        const { Content } = await e.render();
                        return (
                            <div class="flex flex-col items-center gap-1 text-center">
                                <p class="font-light">{e.data.location}</p>
                                <h4 class="leading-loose">{e.data.title}</h4>
                                <p class="text-sm font-light">
                                    <time datetime={e.data.start.toISOString()}>
                                        {formatDisplayedDate(e.data.start)}
                                    </time>
                                    {e.data.end ? (
                                        <time
                                            datetime={e.data.end.toISOString()}
                                        >
                                            - {formatDisplayedDate(e.data.end)}
                                        </time>
                                    ) : (
                                        <span>- Present</span>
                                    )}
                                </p>
                                {e.body && (
                                    <Prose>
                                        <Content />
                                    </Prose>
                                )}
                            </div>
                        );
                    })}
                </div>
            )
        }
    </section>
    <section class="mt-10">
        <h3
            class="mb-5 pb-1 text-center font-light border-b-2 border-dashed border-gray-500"
        >
            {config.certifications.title}
        </h3>
        <Certifications codes={config.certifications.codes} />
    </section>
</BaseLayout>
