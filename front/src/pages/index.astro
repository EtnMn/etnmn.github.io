---
import BaseLayout from "@/layouts/base-layout.astro";
import Prose from "@/components/prose.astro";
import { getEntry, getCollection } from "astro:content";
import { Image } from "astro:assets";
import { formatDisplayedDate } from "@/utils/date";

const about = await getEntry("resume", "about");
const { Content: About } = await about.render();

const experience = await getEntry("resume", "experience");
const { Content: Experience } = await experience.render();
const allExperiences = await getCollection("experience");
allExperiences.sort((a, b) => b.data.start.getTime() - a.data.start.getTime());

const education = await getEntry("resume", "education");
const { Content: Education } = await education.render();
const allEducations = await getCollection("education");
const images = import.meta.glob<{ default: ImageMetadata }>(
    "../assets/*.{jpeg,jpg,png,gif}"
);
---

<BaseLayout>
    {
        about?.body && (
            <section class="mt-10">
                <div class="flex items-center">
                    {about.data.photo && (
                        <Image
                            src={images[about.data.photo]()}
                            alt="photo"
                            class="photo p-5 mr-10 max-w-64 justify-self-center border-2 border-dashed hidden sm:block border-gray-500"
                        />
                    )}
                    <div>
                        <h3 class="font-light mb-4">{about.data.title}</h3>
                        <Prose>
                            <About />
                        </Prose>
                    </div>
                </div>
            </section>
        )
    }
    <section class="mt-10">
        <h3
            class="mb-5 pb-1 text-center font-light border-b-2 border-dashed border-gray-500"
        >
            {experience.data.title}
        </h3>
        {
            experience?.body && (
                <Prose>
                    <Experience />
                </Prose>
            )
        }
        {
            allExperiences && (
                <div class="flex flex-col gap-y-10 mt-10">
                    {allExperiences.map(async (e) => {
                        const { Content } = await e.render();
                        return (
                            <div class="flex gap-x-10 gap-y-3 flex-col sm:flex-row">
                                <div class="basis-1/4">
                                    <h4 class="leading-loose">
                                        {e.data.title}
                                    </h4>
                                    <div class="font-extralight">
                                        <p>{e.data.subTitle}</p>
                                        <time
                                            datetime={e.data.start.toISOString()}
                                        >
                                            {formatDisplayedDate(e.data.start)}
                                        </time>
                                        {e.data.end ? (
                                            <time
                                                datetime={e.data.end.toISOString()}
                                            >
                                                -{" "}
                                                {formatDisplayedDate(
                                                    e.data.end
                                                )}
                                            </time>
                                        ) : (
                                            <span>- Present</span>
                                        )}
                                    </div>
                                </div>
                                {e.body && (
                                    <div class="basis-3/4">
                                        <Prose>
                                            <Content />
                                        </Prose>
                                    </div>
                                )}
                            </div>
                        );
                    })}
                </div>
            )
        }
    </section>
    <section class="mt-10">
        <h3
            class="mb-5 pb-1 text-center font-light border-b-2 border-dashed border-gray-500"
        >
            {education.data.title}
        </h3>
        {
            education?.body && (
                <Prose>
                    <Education />
                </Prose>
            )
        }
        {
            allEducations && (
                <div class="grid grid-cols-2 gap-4">
                    {allEducations.map(async (e) => {
                        const { Content } = await e.render();
                        return (
                            <div class="flex flex-col items-center">
                                <h4 class="leading-loose">{e.data.title}</h4>
                                <p>{e.data.subTitle}</p>
                                <p>{e.data.caption}</p>
                                {e.body && (
                                    <Prose class="mt-3 font-light">
                                        <Content />
                                    </Prose>
                                )}
                            </div>
                        );
                    })}
                </div>
            )
        }
    </section>
</BaseLayout>
